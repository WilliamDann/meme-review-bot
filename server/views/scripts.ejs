const $ = (id) => document.getElementById(id);

const lobby = $('lobby');
lobby.count = $('count');
lobby.ready = $('ready');
lobby.username = $('username');
lobby.error = $('lerror');

const game = $('game');

const sock = new GameSocket('<%= socket %>');

sock.on('open', () => {
	lobby.username.disabled = false;
	lobby.ready.disabled = false;
});

lobby.ready.addEventListener('click', () => {
	sock.send('ready', { name: lobby.username.value });
	lobby.username.disabled = true;
	lobby.ready.disabed = true;
	lobby.error.innerText = '';
});

sock.on('nametaken', msg => {
	lobby.username.disabled = false;
	lobby.error.innerText = msg.message;
	lobby.username.focus();
	let m = document.getElementById('id01')
	m.style.display='block';

	let p = document.createElement('ul')
	for (i of msg.leaderboard) {
		let t = document.createElement('li')
		t.innerHTML = i.name + ": " + i.score;
		t.style.backgroundColor = "#"+i.color;
	}
	m.appendChild(p);
	let ref = document.createElement('button');
	ref.onclick = () => { 
		window.location.reload();
	}
});

sock.on('lobby', msg => {
	lobby.count.innerText = `${msg.ready}/${msg.count} players ready`;
});

sock.on('start', msg => {
	lobby.style.display = 'none';
	game.style.display = 'block';
	game.canvas = new GameCanvas($('canvas'), sock, msg.width, msg.height);
	game.canvas.myColor = msg.color;
	game.canvas.drawSevenSegment(msg.count, 32, 28);
});

sock.on('resize', msg => {
	game.canvas.resizeBoard(msg);
});

sock.on('reveal', msg => {
	let tiles = msg.tiles.map(t => new Tile(t));
	for (tile of tiles) {
		game.canvas.drawTile(tile);
	}
	game.canvas.tiles = game.canvas.tiles.concat(tiles);
	//this.drawTile()
});
sock.on('die', msg => {
	let tiles = msg.tiles.map(t => new Tile(t));
	for (tile of tiles) {
		game.canvas.drawTile(tile);
	}
	game.canvas.tiles = game.canvas.tiles.concat(tiles);
	game.canvas.die();
})

sock.on('leaderboard', msg => {
	game.canvas.drawSevenSegment(msg.count, 32, 28);
})

window.oncontextmenu = () => {
	return false;
}